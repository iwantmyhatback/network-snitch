#!/bin/bash

if [ $# -eq 0 ]
then
echo "Script requires that you pass a password string for all key files"
exit 1
fi

cd $(dirname $0)

# Create root directory and enter
mkdir ./credentials
cd ./credentials
# Create machine directories
mkdir ./jump
mkdir ./home
mkdir ./target
# Directories for *CLIENT* keys
mkdir ./home/client-key
mkdir ./target/client-key
# Generate keys for *CLIENT* machines that need access to JUMP
ssh-keygen -t rsa -b 4096 -f ./home/client-key/id_rsa -N $1 -C "HOME-ID-KEY"
ssh-keygen -t rsa -b 4096 -f ./target/client-key/id_rsa -N $1 -C "TARGET-ID-KEY"
# Directories for *SERVER* machine authorized_keys files 
mkdir ./jump/server-auth
mkdir ./target/server-auth
# Authorize HOME to access JUMP and TARGET
cat ./home/client-key/id_rsa.pub > ./target/server-auth/authorized_keys
cat ./home/client-key/id_rsa.pub > ./jump/server-auth/authorized_keys
# Authorized TARGET to access JUMP
cat ./target/client-key/id_rsa.pub >> ./jump/server-auth/authorized_keys
# Directories for *SERVER* machine keys 
mkdir ./jump/server-key
mkdir ./target/server-key
# Generate keys for *SERVER* machines
ssh-keygen -t ecdsa -b 256 -f ./jump/server-key/ssh_host_ecdsa_key -N $1 -C "JUMP-HOST-KEY"
ssh-keygen -t ecdsa -b 256 -f ./target/server-key/ssh_host_ecdsa_key -N $1 -C "TARGET-HOST-KEY"
# Directories for known hosts
mkdir ./home/known
mkdir ./target/known
# Set JUMP and TARGET as known hosts for HOME
echo -n "* " > ./home/known/known_hosts
cat ./jump/server-key/ssh_host_ecdsa_key.pub >> ./home/known/known_hosts
echo -n "* " >> ./home/known/known_hosts
cat ./target/server-key/ssh_host_ecdsa_key.pub >> ./home/known/known_hosts
# Set JUMP as known host for TARGET
echo -n "* " > ./target/known/known_hosts
cat ./jump/server-key/ssh_host_ecdsa_key.pub >> ./target/known/known_hosts

